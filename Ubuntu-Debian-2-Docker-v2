#!/bin/bash
set -eo pipefail

# 配置参数
TAG_NAME="ubuntu-docker-full:$(date +%Y%m%d)"
DOCKER_DATA_DIR="/var/lib/docker"
TMP_DIR=$(mktemp -d -t dockerized-system-XXXXXX)

# 创建智能排除列表（保留 Docker 运行时数据）
{
  echo "/dev/*"
  echo "/proc/*"
  echo "/sys/*"
  echo "/tmp/*"
  echo "/run/*"
  echo "/mnt/*"
  echo "/media/*"
  echo "/lost+found"
  echo "!/var/lib/docker"
  echo "!/etc/docker"
  echo "!/usr/bin/docker*"
  echo "!/usr/libexec/docker"
} > "$TMP_DIR/excludes.txt"

# 创建 Docker 数据快照（确保数据一致性）
sudo systemctl stop docker.service docker.socket
sudo tar --numeric-owner \
         --xattrs \
         --acls \
         --selinux \
         --exclude-from="$TMP_DIR/excludes.txt" \
         -cpf - / \
  | xz -9e -T0 > "$TMP_DIR/rootfs.tar.xz"
sudo systemctl start docker.service docker.socket

# 创建支持嵌套 Docker 的 Dockerfile
cat << EOF > "$TMP_DIR/Dockerfile"
FROM scratch
ADD rootfs.tar.xz /

# 保留 Docker 运行时目录结构
VOLUME ["/var/lib/docker", "/run/docker.sock"]

# 安装 Docker 运行时依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        iptables \
        libdevmapper1.02.1 \
        libseccomp2 \
        pigz && \
    rm -rf /var/lib/apt/lists/*

# 配置 Docker 存储驱动
ENV DOCKER_STORAGE_DRIVER=overlay2

# 初始化容器 Docker 引擎
COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["dockerd"]
EOF

# 创建 Docker 入口脚本
cat << 'EOF' > "$TMP_DIR/docker-entrypoint.sh"
#!/bin/bash
set -e

# 初始化 Docker 存储目录
if [ -d "/var/lib/docker" ]; then
  chown -R root:root /var/lib/docker
  find /var/lib/docker -type d -print0 | xargs -0 chmod 0700
fi

# 配置 cgroups
if ! mount | grep -q cgroup; then
  mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup
  mkdir -p /sys/fs/cgroup/systemd
  mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd
fi

exec "$@"
EOF
chmod +x "$TMP_DIR/docker-entrypoint.sh"

# 构建镜像
docker buildx build \
  --builder host \
  --platform linux/amd64 \
  --output type=image,name="$TAG_NAME",compression=xz \
  --progress plain \
  --no-cache \
  "$TMP_DIR"

# 清理环境
rm -rf "$TMP_DIR"

echo -e "\n生成镜像信息："
docker images | grep "$TAG_NAME"
